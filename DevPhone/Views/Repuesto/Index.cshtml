@model IEnumerable<DevPhone.Models.MRepuesto>
@{
    ViewData["Title"] = "Gestión de Repuestos";
}

<!-- Ocultar con x-cloak hasta que Alpine.js arranque -->
<style>
    [x-cloak] {
        display: none !important;
    }
</style>

<div x-data="repuestoManager()" class="container-fluid">

    <!-- Mensajes -->
    @if (ViewBag.Success != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewBag.Success
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewBag.Error
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Título + Nuevo -->
    <div class="d-flex justify-content-between align-items-center my-4">
        <h2>@ViewData["Title"]</h2>
        <button class="btn btn-primary" x-on:click="openAdd()">
            <i class="bi bi-plus-lg"></i> Nuevo Repuesto
        </button>
    </div>

    <!-- Tabla de Repuestos -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Precio Unitario</th>
                <th style="width:120px">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var r in Model)
            {
                <tr>
                    <td>@r.Nombre</td>
                    <td>@r.Descripcion</td>
                    <td>@r.PrecioUnitario.ToString("C")</td>
                    <td>
                        <button class="btn btn-sm btn-warning me-1"
                                x-on:click="openEdit({
                      id: @r.IdRepuesto,
                      nombre: '@r.Nombre',
                      descripcion: '@r.Descripcion',
                      precio: '@r.PrecioUnitario'
                    })">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-danger"
                                x-on:click="openDelete({
                      id: @r.IdRepuesto,
                      nombre: '@r.Nombre'
                    })">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Modal: Crear Repuesto -->
    <template x-if="showAdd">
        <div x-cloak class="position-fixed top-0 start-0 w-100 h-100
                     d-flex align-items-center justify-content-center"
             style="background:rgba(0,0,0,0.5); z-index:1050;">
            <div class="card p-4" style="width:380px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Nuevo Repuesto</h5>
                    <button class="btn-close" x-on:click="closeAdd()"></button>
                </div>
                <form x-ref="addForm"
                      x-on:submit.prevent="submitAdd"
                      method="post"
                      asp-action="Create">
                    @Html.AntiForgeryToken()

                    <div class="mb-2">
                        <label class="form-label">Nombre</label>
                        <input name="Nombre" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Descripción</label>
                        <input name="Descripcion" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Precio Unitario</label>
                        <input name="PrecioUnitario" type="number" step="0.01" class="form-control" />
                    </div>

                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2"
                                x-on:click="closeAdd()">
                            Cancelar
                        </button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </template>

    <!-- Modal: Editar Repuesto -->
    <template x-if="showEdit">
        <div x-cloak class="position-fixed top-0 start-0 w-100 h-100
                     d-flex align-items-center justify-content-center"
             style="background:rgba(0,0,0,0.5); z-index:1050;">
            <div class="card p-4" style="width:380px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Editar Repuesto</h5>
                    <button class="btn-close" x-on:click="closeEdit()"></button>
                </div>
                <form x-ref="editForm"
                      :action="`/Repuesto/Edit/${selected.id}`"
                      x-on:submit.prevent="submitEdit"
                      method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="IdRepuesto" x-model="selected.id" />

                    <div class="mb-2">
                        <label class="form-label">Nombre</label>
                        <input name="Nombre" class="form-control" x-model="selected.nombre" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Descripción</label>
                        <input name="Descripcion" class="form-control" x-model="selected.descripcion" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Precio Unitario</label>
                        <input name="PrecioUnitario"
                               type="number" step="0.01"
                               class="form-control"
                               x-model="selected.precio" />
                    </div>

                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2"
                                x-on:click="closeEdit()">
                            Cancelar
                        </button>
                        <button type="submit" class="btn btn-primary">Actualizar</button>
                    </div>
                </form>
            </div>
        </div>
    </template>

    <!-- Modal: Eliminar Repuesto -->
    <template x-if="showDelete">
        <div x-cloak class="position-fixed top-0 start-0 w-100 h-100
                     d-flex align-items-center justify-content-center"
             style="background:rgba(0,0,0,0.5); z-index:1050;">
            <div class="card p-4" style="width:320px;">
                <h5 class="mb-3">Eliminar Repuesto</h5>
                <p>¿Eliminar <strong x-text="selected.nombre"></strong>?</p>
                <form x-on:submit.prevent="submitDelete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" x-model="selected.id" />
                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2"
                                x-on:click="closeDelete()">
                            Cancelar
                        </button>
                        <button type="submit" class="btn btn-danger">Eliminar</button>
                    </div>
                </form>
            </div>
        </div>
    </template>

</div>

<script>
    function repuestoManager() {
      return {
        showAdd: false,
        showEdit: false,
        showDelete: false,
        selected: {},

        openAdd() {
          this.showAdd = true;
        },
        closeAdd() {
          this.showAdd = false;
        },

        openEdit(r) {
          r.precio = parseFloat(r.precio);
          this.selected = { ...r };
          this.showEdit = true;
        },
        closeEdit() {
          this.showEdit = false;
        },

        openDelete(r) {
          this.selected = { ...r };
          this.showDelete = true;
        },
        closeDelete() {
          this.showDelete = false;
        },

        submitAdd() {
          this.$refs.addForm.submit();
        },
        submitEdit() {
          this.$refs.editForm.submit();
        },
        submitDelete() {
          const f = event.target;
          f.action = `/Repuesto/Delete/${this.selected.id}`;
          f.submit();
        }
      };
    }
</script>
