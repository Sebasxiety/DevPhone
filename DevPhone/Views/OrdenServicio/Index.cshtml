@model IEnumerable<DevPhone.Models.MOrdenServicio>
@{
    ViewData["Title"] = "Gestión de Órdenes de Servicio";
}

<!-- Oculta todo lo marcado con x-cloak hasta que Alpine arranque -->
<style>
    [x-cloak] {
        display: none !important;
    }

    .modal-backdrop {
        background: rgba(0,0,0,0.5);
        z-index: 1050;
    }
</style>

<div x-data="orderManager()" x-init="init()" class="container-fluid">

    <!-- Alertas de creación/errores -->
    @if (TempData["OrdenSuccess"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            @TempData["OrdenSuccess"]
            <button class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["OrdenError"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            @TempData["OrdenError"]
            <button class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Cabecera -->
    <div class="d-flex justify-content-between align-items-center my-4">
        <h2>@ViewData["Title"]</h2>
        <button class="btn btn-primary" x-on:click="openAdd()">
            <i class="bi bi-plus-lg"></i> Nueva Orden
        </button>
    </div>

    <!-- Tabla de Órdenes -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>Fecha</th>
                <th>Falla</th>
                <th>Estado</th>
                <th>Cliente</th>
                <th>Técnico</th>
                <th>Dispositivo</th>
                <th style="width:120px">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var o in Model)
            {
                <tr>
                    <td>@o.IdOrden</td>
                    <td>@o.Fecha.ToString("g")</td>
                    <td>@o.DescripcionFalla</td>
                    <td>@o.Estado</td>
                    <td>@o.Cliente.Nombre @o.Cliente.Apellido</td>
                    <td>@o.Usuario.NombreUsuario</td>
                    <td>@o.Dispositivo.Serie</td>
                    <td>
                        <button class="btn btn-sm btn-warning me-1"
                                x-on:click="openEdit({
                      id: @o.IdOrden,
                      descripcion: '@o.DescripcionFalla',
                      estado: '@o.Estado',
                      clienteId: @o.IdCliente,
                      clienteText: '@o.Cliente.Nombre @o.Cliente.Apellido',
                      usuarioId: @o.IdUsuario,
                      dispositivoId: @o.IdDispositivo
                    })">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-danger"
                                x-on:click="openDelete({ id:@o.IdOrden })">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Modal: Crear Orden -->
    <template x-if="showAdd">
        <div x-cloak
             class="modal-backdrop position-fixed top-0 start-0 w-100 h-100
                d-flex align-items-center justify-content-center">
            <div class="card p-4" style="width:500px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Nueva Orden de Servicio</h5>
                    <button class="btn-close" x-on:click="closeAdd()"></button>
                </div>
                <form x-ref="addForm"
                      x-on:submit.prevent="submitAdd"
                      method="post"
                      asp-action="Create">
                    @Html.AntiForgeryToken()

                    <div class="mb-2">
                        <label class="form-label">Descripción de la falla</label>
                        <textarea name="DescripcionFalla" class="form-control"></textarea>
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Estado</label>
                        <select name="Estado"
                                class="form-select"
                                x-model="addState"
                                required>
                            <option value="" disabled>Seleccione estado</option>
                            <template x-for="s in orderStates" :key="s">
                                <option :value="s" x-text="s"></option>
                            </template>
                        </select>
                    </div>

                    <div class="mb-2 position-relative">
                        <label class="form-label">Cliente</label>
                        <input type="text"
                               class="form-control"
                               placeholder="Buscar cliente..."
                               x-model="addClientTerm"
                               x-on:input.debounce="searchClient('add')">
                        <ul class="list-group position-absolute w-100 z-3"
                            x-show="addClientResults.length">
                            <template x-for="c in addClientResults" :key="c.id">
                                <li class="list-group-item list-group-item-action"
                                    x-on:click="selectClient('add', c)"
                                    x-text="c.text"></li>
                            </template>
                        </ul>
                        <input type="hidden" name="IdCliente" x-model="addClient.id" />
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Técnico</label>
                        <select name="IdUsuario"
                                class="form-select"
                                x-model="addUser.id"
                                required>
                            <option value="" disabled>Seleccione técnico</option>
                            <template x-for="t in technicians" :key="t.id">
                                <option :value="t.id" x-text="t.text"></option>
                            </template>
                        </select>
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Dispositivo</label>
                        <select name="IdDispositivo"
                                class="form-select"
                                x-model="addDisp.id"
                                :disabled="!addClient.id"
                                required>
                            <option value="" disabled>Seleccione dispositivo</option>
                            <template x-for="d in addClientDevices" :key="d.id">
                                <option :value="d.id" x-text="d.text"></option>
                            </template>
                        </select>
                    </div>

                    <div class="text-end mt-3">
                        <button type="button"
                                class="btn btn-secondary me-2"
                                x-on:click="closeAdd()">
                            Cancelar
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Guardar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </template>

    <!-- Modal: Editar Orden -->
    <template x-if="showEdit">
        <div x-cloak
             class="modal-backdrop position-fixed top-0 start-0 w-100 h-100
                d-flex align-items-center justify-content-center">
            <div class="card p-4" style="width:500px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Editar Orden</h5>
                    <button class="btn-close" x-on:click="closeEdit()"></button>
                </div>
                <form x-ref="editForm"
                      :action="`/OrdenServicio/Edit/${selected.id}`"
                      x-on:submit.prevent="submitEdit"
                      method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="IdOrden" x-model="selected.id" />

                    <div class="mb-2">
                        <label class="form-label">Descripción de la falla</label>
                        <textarea name="DescripcionFalla"
                                  class="form-control"
                                  x-model="selected.descripcion"></textarea>
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Estado</label>
                        <select name="Estado"
                                class="form-select"
                                x-model="selected.estado"
                                required>
                            <option value="" disabled>Seleccione estado</option>
                            <template x-for="s in orderStates" :key="s">
                                <option :value="s" x-text="s"></option>
                            </template>
                        </select>
                    </div>

                    <div class="mb-2 position-relative">
                        <label class="form-label">Cliente</label>
                        <input type="text"
                               class="form-control"
                               placeholder="Buscar cliente..."
                               x-model="editClientTerm"
                               x-on:input.debounce="searchClient('edit')">
                        <ul class="list-group position-absolute w-100 z-3"
                            x-show="editClientResults.length">
                            <template x-for="c in editClientResults" :key="c.id">
                                <li class="list-group-item list-group-item-action"
                                    x-on:click="selectClient('edit', c)"
                                    x-text="c.text"></li>
                            </template>
                        </ul>
                        <input type="hidden" name="IdCliente" x-model="editClient.id" />
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Técnico</label>
                        <select name="IdUsuario"
                                class="form-select"
                                x-model="editUser.id"
                                required>
                            <option value="" disabled>Seleccione técnico</option>
                            <template x-for="t in technicians" :key="t.id">
                                <option :value="t.id" x-text="t.text"></option>
                            </template>
                        </select>
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Dispositivo</label>
                        <select name="IdDispositivo"
                                class="form-select"
                                x-model="editDisp.id"
                                :disabled="!editClient.id"
                                required>
                            <option value="" disabled>Seleccione dispositivo</option>
                            <template x-for="d in editClientDevices" :key="d.id">
                                <option :value="d.id" x-text="d.text"></option>
                            </template>
                        </select>
                    </div>

                    <div class="text-end mt-3">
                        <button type="button"
                                class="btn btn-secondary me-2"
                                x-on:click="closeEdit()">
                            Cancelar
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Actualizar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </template>

    <!-- Modal: Eliminar Orden -->
    <template x-if="showDelete">
        <div x-cloak
             class="modal-backdrop position-fixed top-0 start-0 w-100 h-100
                d-flex align-items-center justify-content-center">
            <div class="card p-4" style="width:320px;">
                <h5 class="mb-3">Eliminar Orden</h5>
                <p>¿Eliminar orden <strong>#<span x-text="selected.id"></span></strong>?</p>
                <form x-on:submit.prevent="submitDelete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" x-model="selected.id" />
                    <div class="text-end mt-3">
                        <button type="button"
                                class="btn btn-secondary me-2"
                                x-on:click="closeDelete()">
                            Cancelar
                        </button>
                        <button type="submit" class="btn btn-danger">
                            Eliminar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </template>

</div>

@section Scripts {
    <script>
        function orderManager() {
          return {
            showAdd: false,
            showEdit: false,
            showDelete: false,

            orderStates: ['Creada','En Progreso','Finalizada','Entregada'],
            technicians: [],

            // Crear
            addState: 'Creada',
            addClientTerm: '',
            addClientResults: [],
            addClient: { id:null, text:'' },
            addClientDevices: [],
            addUser: { id:null },
            addDisp: { id:null },

            // Editar
            selected: { id:null, descripcion:'', estado:'' },
            editClientTerm: '',
            editClientResults: [],
            editClient: { id:null, text:'' },
            editClientDevices: [],
            editUser: { id:null },
            editDisp: { id:null },

            init() {
              fetch('/Usuario/Technicians')
                .then(r => r.json())
                .then(j => this.technicians = j);
            },

            openAdd() {
              this.showAdd = true;
              this.addState = this.orderStates[0];
              this.addClientTerm = '';
              this.addClientResults = [];
              this.addClient = { id:null, text:'' };
              this.addClientDevices = [];
              this.addUser = { id:null };
              this.addDisp = { id:null };
            },
            closeAdd() { this.showAdd = false; },

            openEdit(o) {
              this.selected = {
                id: o.id,
                descripcion: o.descripcion,
                estado: this.orderStates.includes(o.estado) ? o.estado : this.orderStates[0]
              };
              this.editClient = { id:o.clienteId, text:o.clienteText };
              this.editUser   = { id:o.usuarioId };
              this.editDisp   = { id:o.dispositivoId };
              this.editClientTerm = o.clienteText;
              fetch(`/Dispositivo/ByClient?clientId=${o.clienteId}`)
                .then(r => r.json())
                .then(j => this.editClientDevices = j);
              this.showEdit = true;
            },
            closeEdit() { this.showEdit = false; },

            openDelete(o) {
              this.selected = { id:o.id };
              this.showDelete = true;
            },
            closeDelete() { this.showDelete = false; },

            searchClient(mode) {
              const term = this[mode + 'ClientTerm'];
              if (term.length < 2) {
                this[mode + 'ClientResults'] = [];
                return;
              }
              fetch(`/Cliente/Search?q=${encodeURIComponent(term)}`)
                .then(r => r.json())
                .then(j => this[mode + 'ClientResults'] = j);
            },

            selectClient(mode, c) {
              this[mode + 'Client'] = c;
              this[mode + 'ClientResults'] = [];
              this[mode + 'ClientTerm'] = c.text;
              fetch(`/Dispositivo/ByClient?clientId=${c.id}`)
                .then(r => r.json())
                .then(j => this[mode + 'ClientDevices'] = j);
            },

            submitAdd() {
              const f = this.$refs.addForm;
              f.querySelector('select[name="Estado"]').value = this.addState;
              f.querySelector('input[name="IdCliente"]').value = this.addClient.id;
              f.querySelector('select[name="IdUsuario"]').value = this.addUser.id;
              f.querySelector('select[name="IdDispositivo"]').value = this.addDisp.id;
              f.submit();
            },
            submitEdit() {
              const f = this.$refs.editForm;
              f.querySelector('select[name="Estado"]').value = this.selected.estado;
              f.querySelector('input[name="IdCliente"]').value = this.editClient.id;
              f.querySelector('select[name="IdUsuario"]').value = this.editUser.id;
              f.querySelector('select[name="IdDispositivo"]').value = this.editDisp.id;
              f.submit();
            },
            submitDelete() {
              const f = event.target;
              f.action = `/OrdenServicio/Delete/${this.selected.id}`;
              f.submit();
            }
          }
        }
    </script>
}
