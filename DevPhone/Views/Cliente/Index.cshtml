@model IEnumerable<DevPhone.Models.MCliente>
@{
    ViewData["Title"] = "Gestion de Clientes";
}

<!-- x?cloak global para ocultar hasta que Alpine arranque -->
<style>
    [x-cloak] {
        display: none !important;
    }

    /* Estilos mejorado    <!-- Modal: Crear Cliente -->
    <template x-if="showAddModal">
        <div x-cloak
             class="modal-backdrop-custom d-flex align-items-center justify-content-center"
             style="z-index:9999 !important;">a tabla */
    .table {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
        border: none;
    }

    .table thead th {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        font-weight: 600;
        border: none;
        padding: 1rem 0.75rem;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .table tbody td {
        padding: 1rem 0.75rem;
        border-top: 1px solid #f1f5f9;
        vertical-align: middle;
        font-size: 0.9rem;
    }

    .table tbody tr {
        transition: all 0.2s ease;
    }

    .table tbody tr:hover {
        background-color: #f8fafc;
        transform: translateY(-1px);
        box-shadow: 0 4px 8px -2px rgb(0 0 0 / 0.1);
    }

    .table tbody tr:last-child td {
        border-bottom: none;
    }

    /* Botones de acción mejorados */
    .btn-sm {
        padding: 0.375rem 0.75rem;
        font-size: 0.8rem;
        border-radius: 8px;
        transition: all 0.2s ease;
    }

    .btn-warning {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        border: none;
        color: white;
    }

    .btn-warning:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(245, 158, 11, 0.4);
    }

    .btn-danger {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        border: none;
        color: white;
    }

    .btn-danger:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
    }

    /* Modal backdrop mejorado - Oculta completamente el header */
    .modal-backdrop-custom {
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        right: 0 !important;
        bottom: 0 !important;
        width: 100vw !important;
        height: 100vh !important;
        background: rgba(0, 0, 0, 0.9) !important;
        backdrop-filter: blur(10px) !important;
        z-index: 9999 !important;
        margin: 0 !important;
        padding: 0 !important;
        overflow: hidden !important;
    }

    /* Forzar ocultación del header cuando modal está activo */
    .modal-active .main-header {
        display: none !important;
        visibility: hidden !important;
        opacity: 0 !important;
    }

    .modal-active body {
        overflow: hidden !important;
    }

    /* Bloquear scroll cuando modal está activo */
    body:has(.modal-backdrop-custom) {
        overflow: hidden !important;
    }

    /* Asegurar que el modal esté sobre todo */
    .modal-backdrop-custom {
        isolation: isolate !important;
    }

    /* Estilos mejorados para tarjetas de modal */
    .modal-backdrop-custom .card {
        background: white !important;
        border-radius: 16px !important;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        backdrop-filter: blur(20px) !important;
        max-height: 90vh !important;
        overflow-y: auto !important;
    }

    .modal-backdrop-custom .card .btn-close {
        background: none !important;
        opacity: 0.8 !important;
    }

    .modal-backdrop-custom .card .btn-close:hover {
        opacity: 1 !important;
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .table {
            font-size: 0.8rem;
        }
        
        .table thead th,
        .table tbody td {
            padding: 0.5rem;
        }
        
        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
    }
</style>

<div x-data="clientManager()" class="container-fluid">


    @if (ViewBag.Success != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewBag.Success
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewBag.Error
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }


    <!-- Titulo y botón Nuevo -->
    <div class="d-flex justify-content-between align-items-center my-4">
        <h2>@ViewData["Title"]</h2>
        <button class="btn btn-primary" x-on:click="openAdd()">
            <i class="bi bi-plus-lg"></i> Nuevo Cliente
        </button>
    </div>

    <!-- Tabla de Clientes -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Cédula</th>
                <th>Teléfono</th>
                <th>Correo</th>
                <th>Direccion</th>
                <th style="width:120px">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in Model)
            {
                <tr>
                    <td>@c.Nombre @c.Apellido</td>
                    <td>@c.Cedula</td>
                    <td>@c.Telefono</td>
                    <td>@c.Correo</td>
                    <td>@c.Direccion</td>
                    <td>
                        <button class="btn btn-sm btn-warning me-1"
                                x-on:click="openEdit({
                      id: @c.IdCliente,
                      nombre: '@c.Nombre',
                      apellido: '@c.Apellido',
                      cedula: '@c.Cedula',
                      telefono: '@c.Telefono',
                      correo: '@c.Correo',
                      direccion: '@c.Direccion'
                    })">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-danger"
                                x-on:click="openDelete({
                      id: @c.IdCliente,
                      nombre: '@c.Nombre @c.Apellido'
                    })">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Modal: Crear Cliente -->
    <template x-if="showAddModal">
        <div x-cloak
             class="position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center modal-backdrop-custom"
             style="z-index:1050;">

            <div class="card p-4" style="width:380px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Nuevo Cliente</h5>
                    <button class="btn-close" x-on:click="closeAdd()"></button>
                </div>
                <form asp-action="Create" method="post">
                    <div class="mb-2"><label class="form-label">Nombre</label><input name="Nombre" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label">Apellido</label><input name="Apellido" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label">Cedula</label><input name="Cedula" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label">Telefono</label><input name="Telefono" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label">Correo</label><input name="Correo" type="email" class="form-control" /></div>
                    <div class="mb-2"><label class="form-label">Direccion</label><input name="Direccion" class="form-control" /></div>
                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2" x-on:click="closeAdd()">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>

        </div>
    </template>

    <!-- Modal: Editar Cliente -->
    <template x-if="showEditModal">
        <div x-cloak
             class="modal-backdrop-custom d-flex align-items-center justify-content-center"
             style="z-index:9999 !important;">

            <div class="card p-4" style="width:380px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Editar Cliente</h5>
                    <button class="btn-close" x-on:click="closeEdit()"></button>
                </div>
                <form :action="`/Cliente/Edit/${selected.id}`" method="post">
                    <input type="hidden" name="IdCliente" :value="selected.id" />
                    <div class="mb-2"><label class="form-label">Nombre</label><input name="Nombre" class="form-control" x-model="selected.nombre" /></div>
                    <div class="mb-2"><label class="form-label">Apellido</label><input name="Apellido" class="form-control" x-model="selected.apellido" /></div>
                    <div class="mb-2"><label class="form-label">Cedula</label><input name="Cedula" class="form-control" x-model="selected.cedula" /></div>
                    <div class="mb-2"><label class="form-label">Telefono</label><input name="Telefono" class="form-control" x-model="selected.telefono" /></div>
                    <div class="mb-2"><label class="form-label">Correo</label><input name="Correo" type="email" class="form-control" x-model="selected.correo" /></div>
                    <div class="mb-2"><label class="form-label">Dirección</label><input name="Direccion" class="form-control" x-model="selected.direccion" /></div>
                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2" x-on:click="closeEdit()">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Actualizar</button>
                    </div>
                </form>
            </div>

        </div>
    </template>

    <!-- Modal: Eliminar Cliente -->
    <template x-if="showDeleteModal">
        <div x-cloak
             class="modal-backdrop-custom d-flex align-items-center justify-content-center"
             style="z-index:9999 !important;">

            <div class="card p-4" style="width:320px;">
                <h5 class="mb-3">Eliminar Cliente</h5>
                <p>¿Seguro que deseas eliminar a <strong x-text="selected.nombre"></strong>?</p>
                <form :action="`/Cliente/Delete/${selected.id}`" method="post">
                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2" x-on:click="closeDelete()">Cancelar</button>
                        <button type="submit" class="btn btn-danger">Eliminar</button>
                    </div>
                </form>
            </div>

        </div>
    </template>

</div>

<script>
    function clientManager() {
      return {
        showAddModal: false,
        showEditModal: false,
        showDeleteModal: false,
        selected: {},

        openAdd() {
          this.showAddModal = true;
          this.toggleHeaderVisibility(true);
        },
        openEdit(cliente) {
          this.selected = { ...cliente };
          this.showEditModal = true;
          this.toggleHeaderVisibility(true);
        },
        openDelete(cliente) {
          this.selected = { ...cliente };
          this.showDeleteModal = true;
          this.toggleHeaderVisibility(true);
        },
        closeAdd() {
          this.showAddModal = false;
          this.toggleHeaderVisibility(false);
        },
        closeEdit() {
          this.showEditModal = false;
          this.toggleHeaderVisibility(false);
        },
        closeDelete() {
          this.showDeleteModal = false;
          this.toggleHeaderVisibility(false);
        },
        toggleHeaderVisibility(hide) {
          const header = document.querySelector('.main-header');
          const body = document.body;
          if (hide) {
            header.style.display = 'none';
            header.style.visibility = 'hidden';
            header.style.opacity = '0';
            body.classList.add('modal-active');
            body.style.overflow = 'hidden';
          } else {
            header.style.display = '';
            header.style.visibility = '';
            header.style.opacity = '';
            body.classList.remove('modal-active');
            body.style.overflow = '';
          }
        }
      };
    }
</script>
