@model IEnumerable<DevPhone.Models.MUsuario>
@{
    ViewData["Title"] = "Gestión de Usuarios";
}

<style>
    [x-cloak] {
        display: none !important
    }</style>

<div x-data="usuarioManager()" class="container-fluid">

    <!-- Alertas -->
    @if (ViewBag.Success != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            @ViewBag.Success
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            @ViewBag.Error
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Título y Nuevo -->
    <div class="d-flex justify-content-between align-items-center my-4">
        <h2>@ViewData["Title"]</h2>
        <button class="btn btn-primary" x-on:click="openAdd()">
            <i class="bi bi-plus-lg"></i> Nuevo Usuario
        </button>
    </div>

    <!-- Tabla -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nombres</th>
                <th>Usuario</th>
                <th>Rol</th>
                <th>Fecha Creación</th>
                <th style="width:120px">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in Model)
            {
                <tr>
                    <td>@u.Nombres</td>
                    <td>@u.NombreUsuario</td>
                    <td>@u.Rol</td>
                    <td>@u.FechaCreacion.ToString("g")</td>
                    <td>
                        <button class="btn btn-sm btn-warning me-1"
                                x-on:click="openEdit({
                                  id: @u.IdUsuario,
                                  nombres: '@u.Nombres',
                                  nombreUsuario: '@u.NombreUsuario',
                                  contrasena: '@u.Contrasena',
                                  rol: '@u.Rol'
                                })">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-danger"
                                x-on:click="openDelete({ id: @u.IdUsuario, nombres: '@u.Nombres' })">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Modal: Crear Usuario -->
    <template x-if="showAdd">
        <div x-cloak class="modal-backdrop d-flex align-items-center justify-content-center"
             style="background:rgba(0,0,0,0.5); z-index:1050;">
            <div class="card p-4" style="width:380px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Nuevo Usuario</h5>
                    <button class="btn-close" x-on:click="closeAdd()"></button>
                </div>
                <form x-ref="addForm" x-on:submit.prevent="submitAdd" method="post" asp-action="Create">
                    @Html.AntiForgeryToken()

                    <div class="mb-2">
                        <label class="form-label">Nombres</label>
                        <input name="Nombres" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Nombre de Usuario</label>
                        <input name="NombreUsuario" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Contraseña</label>
                        <input name="Contrasena" type="password" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Rol</label>
                        <select name="Rol" class="form-select" x-model="addRole">
                            <option value="" disabled>Seleccione un rol</option>
                            <template x-for="r in roles" :key="r">
                                <option :value="r" x-text="r"></option>
                            </template>
                        </select>
                    </div>

                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2" x-on:click="closeAdd()">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </template>

    <!-- Modal: Editar Usuario -->
    <template x-if="showEdit">
        <div x-cloak class="modal-backdrop d-flex align-items-center justify-content-center"
             style="background:rgba(0,0,0,0.5); z-index:1050;">
            <div class="card p-4" style="width:380px;">
                <div class="d-flex justify-content-between mb-3">
                    <h5>Editar Usuario</h5>
                    <button class="btn-close" x-on:click="closeEdit()"></button>
                </div>
                <form x-ref="editForm"
                      :action="`/Usuario/Edit/${selected.id}`"
                      x-on:submit.prevent="submitEdit"
                      method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="IdUsuario" x-model="selected.id" />

                    <div class="mb-2">
                        <label class="form-label">Nombres</label>
                        <input name="Nombres" class="form-control" x-model="selected.nombres" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Nombre de Usuario</label>
                        <input name="NombreUsuario" class="form-control" x-model="selected.nombreUsuario" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Contraseña</label>
                        <input name="Contrasena" type="password" class="form-control" x-model="selected.contrasena" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Rol</label>
                        <select name="Rol" class="form-select" x-model="selected.rol">
                            <option value="" disabled>Seleccione un rol</option>
                            <template x-for="r in roles" :key="r">
                                <option :value="r" x-text="r" :selected="r === selected.rol"></option>
                            </template>
                        </select>
                    </div>

                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2" x-on:click="closeEdit()">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Actualizar</button>
                    </div>
                </form>
            </div>
        </div>
    </template>

    <!-- Modal: Eliminar Usuario -->
    <template x-if="showDelete">
        <div x-cloak class="modal-backdrop d-flex align-items-center justify-content-center"
             style="background:rgba(0,0,0,0.5); z-index:1050;">
            <div class="card p-4" style="width:320px;">
                <h5 class="mb-3">Eliminar Usuario</h5>
                <p>¿Eliminar usuario <strong x-text="selected.nombres"></strong>?</p>
                <form x-on:submit.prevent="submitDelete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" x-model="selected.id" />
                    <div class="text-end mt-3">
                        <button type="button" class="btn btn-secondary me-2" x-on:click="closeDelete()">Cancelar</button>
                        <button type="submit" class="btn btn-danger">Eliminar</button>
                    </div>
                </form>
            </div>
        </div>
    </template>











</div>

<script>
    function usuarioManager() {
      return {
        showAdd: false,
        showEdit: false,
        showDelete: false,

        // roles predefinidos
        roles: ['Admin','Tecnico'],

        // datos Add
        addRole: 'Admin',

        // datos Edit/Delete
        selected: {},

        openAdd() {
          this.addRole = this.roles[0];
          this.showAdd = true;
        },
        closeAdd() {
          this.showAdd = false;
        },

         openEdit(u) {
            this.selected={ ...u };
          this.showEdit = true;
        },
            
        closeEdit() {
              this.showEdit = false;
            },

        openDelete(u) {
             if (u.id === 1) {
            Swal.fire({
              icon: 'error',
              title: 'Operación no permitida',
              text: 'No se puede borrar el usuario administrador maestro.',
              confirmButtonText: 'Entendido',
              confirmButtonColor: '#3085d6'
            });
            return;
          }
          this.selected = { ...u };
          this.showDelete = true;
        },
        closeDelete() {
          this.showDelete = false;
        },

        submitAdd() {
          const f = this.$refs.addForm;
          f.querySelector('input[name="Contrasena"]').value = f.querySelector('input[name="Contrasena"]').value;
          f.submit();
        },
        submitEdit() {
          this.$refs.editForm.submit();
        },
        submitDelete() {
          const f = event.target;
          f.action = `/Usuario/Delete/${this.selected.id}`;
          f.submit();
        }



      };


    }
</script>
